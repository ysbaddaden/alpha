JS-compat is an obstrusive javascript library that aims at
fixing, implementing and emulating standard javascript and
DOM in older browsers.

The basic idea is to permit a developer to run some
javascript code in Internet Explorer without even thinking
about it. It's just so nice to see your code running in
standards compliant browsers with no change. Wouldn't it be
nice if it did the same in IE?


== DOM prototypes in IE < 8 ==

IE doesn't implement DOM prototypes (like Element and Event)
before IE8. JS-compat emulates Element and Event with their
prototypes, for easy extend, when they're not implemented.

For instance, if you wish to create a hide() method available
for all elements, just add it to the prototype:

    Element.prototype.hide = function()
    {
      // ...
    }

Most functions that return DOM elements, like getElementById,
getElementsByTagName, etc., are rerouted and already return
extended elements. So you don't need to think about it.


== DOM events in IE ==

addEventListener() and removeEventListener() have been
implemented, at least the bubbling mode, as the capture
mode is harder to emulate (but should be doable).

Of course listener functions will receive the event object
as the first parameter. The object will have related elements
too, like target, relatedTarget and currentTarget.


== Limitations and concerns ==

Even thought IE8 has support for getters and setters, older
releases do not, and I don't think it's possible to emulate
it (apparently it is, using some VBScript:
http://alex.dojotoolkit.org/08/jscript/lettable.html ). This
fact leads to some difficulties.

For instance, how to return extended elements in IE6/7 for
related attributes, like firstChild, nextSibling or parentNode?
Possible solutions are:

  a. manually extend them (eg: misago.$(elm.parentNode));
  b. implement a get(attribute) method that will always
     return extended elements.

The same question arises for the emulation of Firefox 3.5's
children, countElementChild, lastElementChild, etc. attributes.
These can be emulated throught getters in most browsers, but
not in IE6 and IE7. Sadly.


== Backward compatibility ==

New browsers come with nice new features... that are obviously
lacking in older releases. One goal of JS-compat is to implement
(or emulate) these when they're missing.

This is for instance getElementsByClassName, querySelectorAll,
etc.

